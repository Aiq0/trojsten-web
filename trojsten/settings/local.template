# This is the local configuration template. Copy it to local.py and uncomment
# the lines you wish to make changes to. 


#
# Django settings
#


# You need to set up the 'default' database before starting the web
# The 'kaspar' database is only used for importing old data from it
#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': '',
#        'USER': '',
#        'PASSWORD': '',
#        'HOST': '',
#        'PORT': '',
#    },
#    'kaspar': {
#        'ENGINE': 'django.db.backends.postgresql_psycopg2',
#        'NAME': 'kaspar',
#        'USER': 'trojsten',
#        'PASSWORD': 'trojsten',
#        'HOST': 'localhost',
#        'PORT': '',
#    },
#}

# Admins receive emails with errors
#ADMINS = (
#    ('All admins', 'trojsten-web@ksp.sk'),
#)

# Managers will receive mails from Feedback form
#MANAGERS = ADMINS

# Hosts/domain names that are valid for this site; required if DEBUG is False
# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
#ALLOWED_HOSTS = []

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# In a Windows environment this must be set to your system time zone.
#TIME_ZONE = 'Europe/Bratislava'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
#LANGUAGE_CODE = 'sk-SK'

#SITE_ID = 1

#SITES = {
#    1: {
#        'NAME': 'Korešpondenčný seminár z programovania',
#        'SHORT_NAME': 'KSP',
#        'URL': 'http://ksp.sk',
#    },
#    2: {
#        'NAME': 'Fyzikálny korešpondenčný seminár',
#        'SHORT_NAME': 'FKS',
#        'URL': 'http://fks.sk',
#    },
#    3: {
#        'NAME': 'Korešpondenčný matematický seminár',
#        'SHORT_NAME': 'KMS',
#        'URL': 'http://kms.sk',
#    },
#    4: {
#        'NAME': 'Trojsten',
#        'SHORT_NAME': 'Trojsten',
#        'URL': 'http://trojsten.sk',
#    },
#}

#LOCALE_PATHS = (
#    os.path.join(PROJECT_DIR, 'locale'),
#)

#APPEND_SLASH = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
#MEDIA_ROOT = os.path.join(PROJECT_DIR, 'media')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://example.com/media/", "http://media.example.com/"
#MEDIA_URL = '/media/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/var/www/example.com/static/"
#STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')

# URL prefix for static files.
# Example: "http://example.com/static/", "http://static.example.com/"
#STATIC_URL = '/static/'

# Additional locations of static files
#STATICFILES_DIRS = ()

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error when DEBUG=False.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
#LOGGING = {
#    'version': 1,
#    'disable_existing_loggers': False,
#    'filters': {
#        'require_debug_false': {
#            '()': 'django.utils.log.RequireDebugFalse'
#        }
#    },
#    'handlers': {
#        'mail_admins': {
#            'level': 'ERROR',
#            'filters': ['require_debug_false'],
#            'class': 'django.utils.log.AdminEmailHandler'
#        }
#    },
#    'loggers': {
#        'django.request': {
#            'handlers': ['mail_admins'],
#            'level': 'ERROR',
#            'propagate': True,
#        },
#    }
#}

#AUTHENTICATION_BACKENDS = (
    #'social.backends.facebook.FacebookOAuth2',
    #'social.backends.google.GoogleOAuth2',
    #'social.backends.github.GithubOAuth2',
    #'ksp_login.backends.LaunchpadAuth',
    #'social.backends.open_id.OpenIdAuth',
    #'django.contrib.auth.backends.ModelBackend',
#)


#
# Included packages settings
#


# KSP-Login settings
# The number of authentication providers to show in the short list.
#AUTHENTICATION_PROVIDERS_BRIEF = 3
#SOCIAL_AUTH_FACEBOOK_KEY = ''
#SOCIAL_AUTH_FACEBOOK_SECRET = ''
#SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
#SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {'locale': 'sk_SK'}
#SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = ''
#SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = ''
#SOCIAL_AUTH_GITHUB_KEY = ''
#SOCIAL_AUTH_GITHUB_SECRET = ''
#SOCIAL_AUTH_GITHUB_SCOPE = ['email']

#DISQUS_WEBSITE_SHORTNAME = 'trojsten-ksp'

# Attachments uploaded through wiki will be stored here
#WIKI_ATTACHMENTS_PATH = ''

# Celery Broker URL
#BROKER_URL = 'django://'


#
# Trojstenweb settings
#


# Task statements settings
# The tasks application will look for compiled task statements here
#TASK_STATEMENTS_PATH = ''
# Task repositories will be stored here
#TASK_STATEMENTS_REPO_PATH = ''
#TASK_STATEMENTS_SUFFIX_YEAR = 'rocnik'
#TASK_STATEMENTS_SUFFIX_ROUND = 'kolo'
#TASK_STATEMENTS_TASKS_DIR = 'zadania'
#TASK_STATEMENTS_PREFIX_TASK = 'prikl'
#TASK_STATEMENTS_SOLUTIONS_DIR = 'vzoraky'
#TASK_STATEMENTS_PICTURES_DIR = 'obrazky'
#TASK_STATEMENTS_HTML_DIR = 'html'
#TASK_STATEMENTS_PDF = 'zadania.pdf'
#TASK_STATEMENTS_SOLUTIONS_PDF = 'vzoraky.pdf'
#ALLOWED_PICTURE_EXT = {'.jpg', '.png', '.gif', '.webp', }

# Round progressbar settings
#ROUND_PROGRESS_DEFAULT_CLASS = 'progress-bar-info'
#ROUND_PROGRESS_WARNING_DAYS = 14
#ROUND_PROGRESS_WARNING_CLASS = 'progress-bar-warning'
#ROUND_PROGRESS_DANGER_DAYS = 7
#ROUND_PROGRESS_DANGER_CLASS = 'progress-bar-danger'

# Submit settings
# Submits uploaded through submit application will be stored here
#SUBMIT_PATH = ''
#UPLOADED_FILENAME_MAXLENGTH = 100000
#PROTOCOL_FILE_EXTENSION = '.protokol'
#TESTER_URL = 'experiment'
#TESTER_PORT = 12347
#TESTER_WEB_IDENTIFIER = 'KSP'
