# -*- coding: utf-8 -*-
# Generated by Django 1.9.12 on 2017-03-01 19:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import trojsten.utils.utils


def fill_task_people(apps, schema_editor):
    Task = apps.get_model('contests', 'Task')
    TaskPeople = apps.get_model('contests', 'TaskPeople')
    for task in Task.objects.all():
        if task.reviewer:
            TaskPeople.objects.create(
                task=task,
                user=task.reviewer,
                role=constants.TASK_ROLE_REVIEWER
            )


def reverse_fill_task_people(apps, schema_editor):
    TaskPeople = apps.get_model('contests', 'TaskPeople')
    for line in TaskPeople.objects.all():
        if line.role == constants.TASK_ROLE_REVIEWER and not line.task.reviewer:
            line.task.reviewer = line.user
            line.task.save()


class Migration(migrations.Migration):

    replaces = [(b'contests', '0001_squashed_0003_auto_20160301_1436'), (b'contests', '0003_category_task'), (b'contests', '0004_auto_20160910_1302'), (b'contests', '0005_auto_20160910_1317'), (b'contests', '0006_auto_20160925_1324'), (b'contests', '0007_auto_20161031_2313_squashed_0009_remove_task_reviewer'), (b'contests', '0008_auto_20170228_2341')]

    initial = True

    dependencies = [
        ('sites', '0001_initial'),
        ('auth', '0006_require_contenttypes_0002'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='n\xe1zov')),
                ('primary_school_only', models.BooleanField(default=False, verbose_name='s\xfa\u0165a\u017e je iba pre z\xe1klado\u0161kol\xe1kov')),
                ('organizers_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Group', verbose_name='skupina ved\xfacich')),
            ],
            options={
                'verbose_name': 'S\xfa\u0165a\u017e',
                'verbose_name_plural': 'S\xfa\u0165a\u017ee',
            },
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='\u010d\xedslo')),
                ('start_time', models.DateTimeField(default=trojsten.utils.utils.default_start_time, verbose_name='za\u010diatok')),
                ('end_time', models.DateTimeField(default=trojsten.utils.utils.default_end_time, verbose_name='koniec')),
                ('visible', models.BooleanField(verbose_name='vidite\u013enos\u0165')),
                ('solutions_visible', models.BooleanField(verbose_name='vidite\u013enos\u0165 vzor\xe1kov')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Series', verbose_name='s\xe9ria')),
            ],
            options={
                'verbose_name': 'Kolo',
                'verbose_name_plural': 'Kol\xe1',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=32, verbose_name='n\xe1zov')),
                ('number', models.IntegerField(verbose_name='\u010d\xedslo s\xe9rie')),
                ('year', models.IntegerField(verbose_name='ro\u010dn\xedk')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Competition', verbose_name='s\xfa\u0165a\u017e')),
            ],
            options={
                'verbose_name': 'S\xe9ria',
                'verbose_name_plural': 'S\xe9rie',
            },
        ),
        migrations.AddField(
            model_name='competition',
            name='sites',
            field=models.ManyToManyField(to=b'sites.Site'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='n\xe1zov')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Competition', verbose_name='s\xfa\u0165a\u017e')),
            ],
            options={
                'verbose_name': 'Kateg\xf3ria',
                'verbose_name_plural': 'Kateg\xf3rie',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='n\xe1zov')),
                ('number', models.IntegerField(verbose_name='\u010d\xedslo')),
                ('description_points', models.IntegerField(default=0, verbose_name='body za popis')),
                ('source_points', models.IntegerField(default=0, verbose_name='body za program')),
                ('integer_source_points', models.BooleanField(default=True, verbose_name='celo\u010d\xedseln\xe9 body za program')),
                ('has_source', models.BooleanField(default=False, verbose_name='odovzd\xe1va sa zdroj\xe1k')),
                ('has_description', models.BooleanField(default=False, verbose_name='odovzd\xe1va sa popis')),
                ('has_testablezip', models.BooleanField(default=False, verbose_name='odovzd\xe1va sa zip na testova\u010d')),
                ('external_submit_link', models.CharField(blank=True, max_length=128, null=True, verbose_name='Odkaz na extern\xe9 odovzd\xe1vanie')),
                ('categories', models.ManyToManyField(blank=True, to=b'contests.Category', verbose_name='kateg\xf3ria')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='opravovate\u013e')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Round', verbose_name='kolo')),
            ],
            options={
                'verbose_name': '\xdaloha',
                'verbose_name_plural': '\xdalohy',
            },
        ),
        migrations.RenameField(
            model_name='Round',
            old_name='series',
            new_name='semester',
        ),
        migrations.AlterModelOptions(
            name='semester',
            options={'verbose_name': '\u010cas\u0165', 'verbose_name_plural': '\u010casti'},
        ),
        migrations.AlterField(
            model_name='round',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Semester', verbose_name='\u010das\u0165'),
        ),
        migrations.AlterField(
            model_name='semester',
            name='number',
            field=models.IntegerField(verbose_name='\u010d\xedslo \u010d\xe1sti'),
        ),
        migrations.CreateModel(
            name='TaskPeople',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(0, 'opravovate\u013e'), (1, 'vzor\xe1kova\u010d'), (2, 'recenzova\u010d')], verbose_name='role')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contests.Task', verbose_name='task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ved\xfaci')),
            ],
            options={
                'verbose_name': 'Assigned user',
                'verbose_name_plural': 'Pridelen\xed \u013eudia',
            },
        ),
        migrations.RunPython(
            code=fill_task_people,
            reverse_code=reverse_fill_task_people,
        ),
        migrations.RemoveField(
            model_name='task',
            name='reviewer',
        ),
        migrations.AlterModelOptions(
            name='taskpeople',
            options={'verbose_name': 'Pridelen\xfd \u010dlovek', 'verbose_name_plural': 'Pridelen\xed \u013eudia'},
        ),
        migrations.AlterField(
            model_name='taskpeople',
            name='role',
            field=models.IntegerField(choices=[(0, 'opravovate\u013e'), (1, 'solution writer'), (2, 'recenzova\u010d')], verbose_name='funkcia'),
        ),
        migrations.AlterField(
            model_name='taskpeople',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_people', to='contests.Task', verbose_name='task'),
        ),
    ]
